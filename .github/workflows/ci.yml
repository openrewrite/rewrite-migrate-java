---
name: ci

on:
  push:
    branches:
      - main
    tags-ignore:
      - "*"
  pull_request:
    branches:
      - main
  workflow_dispatch: {}
  schedule:
    - cron: "0 18 * * *"

env:
  GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'
  GRADLE_SWITCHES: "--console=plain --info --stacktrace --no-daemon"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        java: ["11"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    if: github.repository_owner == 'openrewrite'
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{secrets.WORKFLOWS_ACCESS_TOKEN}}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set-up-jdk
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: ${{ matrix.java }}
          cache: 'gradle'
      - name: build
        run: ./gradlew ${GRADLE_SWITCHES} build test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

  publish-snapshots:
    needs: [build]
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule') && github.repository_owner == 'openrewrite'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set-up-jdk
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "11"
      - name: setup-cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: publish-snapshots
        timeout-minutes: 30
        run: ./gradlew ${GRADLE_SWITCHES} snapshot publish -PforceSigning -x test
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.OSSRH_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.OSSRH_SIGNING_PASSWORD }}
