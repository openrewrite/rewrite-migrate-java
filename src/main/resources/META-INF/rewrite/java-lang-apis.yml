#
# Copyright 2021 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.lang.JavaLangAPIs
displayName: Use modernized `java.lang` APIs
description: Certain Java lang APIs have become deprecated and their usages changed, necessitating usage changes.
recipeList:
  - org.openrewrite.java.migrate.lang.MigrateCharacterIsJavaLetterToIsJavaIdentifierStart
  - org.openrewrite.java.migrate.lang.MigrateCharacterIsJavaLetterOrDigitToIsJavaIdentifierPart
  - org.openrewrite.java.migrate.lang.MigrateCharacterIsSpaceToIsWhitespace
  - org.openrewrite.java.migrate.lang.MigrateRuntimeVersionMajorToFeature
  - org.openrewrite.java.migrate.lang.MigrateRuntimeVersionMinorToInterim
  - org.openrewrite.java.migrate.lang.MigrateRuntimeVersionSecurityToUpdate
  - org.openrewrite.java.migrate.lang.MigrateSecurityManagerMulticast
  - org.openrewrite.java.migrate.lang.MigrateClassLoaderDefineClass
  - org.openrewrite.java.migrate.lang.MigrateClassNewInstanceToGetDeclaredConstructorNewInstance

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.lang.MigrateCharacterIsJavaLetterToIsJavaIdentifierStart
displayName: Use `Character#isJavaIdentifierStart(char)`
description: Use `Character#isJavaIdentifierStart(char)` instead of the deprecated `Character#isJavaLetter(char)` in Java 1.1 or higher.
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: java.lang.Character isJavaLetter(char)
      newMethodName: isJavaIdentifierStart

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.lang.MigrateCharacterIsJavaLetterOrDigitToIsJavaIdentifierPart
displayName: Use `Character#isJavaIdentifierPart(char)`
description: Use `Character#isJavaIdentifierPart(char)` instead of the deprecated `Character#isJavaLetterOrDigit(char)` in Java 1.1 or higher.
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: java.lang.Character isJavaLetterOrDigit(char)
      newMethodName: isJavaIdentifierPart

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.lang.MigrateCharacterIsSpaceToIsWhitespace
displayName: Use `Character#isWhitespace(char)`
description: Use `Character#isWhitespace(char)` instead of the deprecated `Character#isSpace(char)` in Java 1.1 or higher.
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: java.lang.Character isSpace(char)
      newMethodName: isWhitespace

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.lang.MigrateRuntimeVersionMajorToFeature
displayName: Use `Runtime.Version#feature()`
description: Use `Runtime.Version#feature()` instead of the deprecated `Runtime.Version#major()` in Java 10 or higher.
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: java.lang.Runtime.Version major()
      newMethodName: feature

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.lang.MigrateRuntimeVersionMinorToInterim
displayName: Use `Runtime.Version#interim()`
description: Use `Runtime.Version#interim()` instead of the deprecated `Runtime.Version#minor()` in Java 10 or higher.
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: java.lang.Runtime.Version minor()
      newMethodName: interim

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.lang.MigrateRuntimeVersionSecurityToUpdate
displayName: Use `Runtime.Version#update()`
description: Use `Runtime.Version#update()` instead of the deprecated `Runtime.Version#security()` in Java 10 or higher.
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: java.lang.Runtime.Version security()
      newMethodName: update
