#
# Copyright 2023 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.jakarta.JakartaEE10
displayName: Migrate to Jakarta EE 10
description: These recipes help with the Migration to Jakarta EE 10, flagging and updating deprecated methods.
tags:
  - jakarta
recipeList:
  - org.openrewrite.java.migrate.jakarta.JavaxMigrationToJakarta
  - org.openrewrite.java.migrate.jakarta.RemovedIsParmetersProvidedMethod
  - org.openrewrite.java.migrate.jakarta.RemovedSOAPElementFactory
  - org.openrewrite.java.migrate.jakarta.RemovedStateManagerMethods
  - org.openrewrite.java.migrate.jakarta.WsWsocServerContainerDeprecation
  - org.openrewrite.java.migrate.jakarta.RemovedJakartaFacesExpressionLanguageClasses
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.jakarta.WsWsocServerContainerDeprecation
displayName: Replace `doUpgrade(..)` with `ServerContainer.upgradeHttpToWebSocket(..)`
description: Deprecated `WsWsocServerContainer.doUpgrade(..)` is replaced by the Jakarta WebSocket 2.1 specification `ServerContainer.upgradeHttpToWebSocket(..)`.
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: com.ibm.websphere.wsoc.WsWsocServerContainer doUpgrade(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, com.ibm.websphere.wsoc.ServerEndpointConfig, java.util.Map)
      newMethodName: upgradeHttpToWebSocket
      ignoreDefinition: true
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.ibm.websphere.wsoc.WsWsocServerContainer
      newFullyQualifiedTypeName: jakarta.websocket.server.ServerContainer
      ignoreDefinition: true
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.jakarta.RemovedIsParmetersProvidedMethod
displayName: Use `isParametersProvided()`
description: >
  Expression Language prior to 5.0 provides the deprecated MethodExpression.isParmetersProvided() method, with the word 'parameter' misspelled in the method name. 
  This method is unavailable in Jakarta Expression Language 5.0. Use the correctly spelled MethodExpression.isParametersProvided() method instead.
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: jakarta.el.MethodExpression isParmetersProvided()
      newMethodName: isParametersProvided
      ignoreDefinition: true
---
  type: specs.openrewrite.org/v1beta/recipe
  name: org.openrewrite.java.migrate.jakarta.RemovedSOAPElementFactory
  displayName: Use `jakarta.xml.soap.SOAPFactory to create SOAPElements`
  description: >
    XML Web Services prior to 4.0 provides the deprecated SOAPElementFactory class, 
    which is removed in XML Web Services 4.0. The recommended replacement is to use jakarta.xml.soap.SOAPFactory to create SOAPElements.
  recipeList:
    - org.openrewrite.java.ChangeMethodName:
        methodPattern: jakarta.xml.soap.SOAPElementFactory create(String,..)
        newMethodName: createElement
        ignoreDefinition: true
    - org.openrewrite.java.ChangeMethodName:
        methodPattern: jakarta.xml.soap.SOAPElementFactory create(jakarta.xml.soap.Name)
        newMethodName: createElement
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: jakarta.xml.soap.SOAPElementFactory
        newFullyQualifiedTypeName: jakarta.xml.soap.SOAPFactory
        ignoreDefinition: true
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.jakarta.RemovedStateManagerMethods
displayName: Use `StateManagementStrategy`
description: >
      Methods that were removed from the `jakarta.faces.application.StateManager` and `javax.faces.application.StateManager` classes in Jakarta Faces 4.0 are replaced
      by `jakarta.faces.view.StateManagementStrategy` or `javax.faces.view.StateManagementStrategy` based on Jakarta10 migration in Faces 4.0
recipeList:
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: "*.faces.application.StateManager getComponentStateToSave(*.faces.context.FacesContext)"
      newMethodName: saveView
      ignoreDefinition: true
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: "*.faces.application.StateManager getTreeStructureToSave(*.faces.context.FacesContext)"
      newMethodName: saveView
      ignoreDefinition: true
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: "*.faces.application.StateManager restoreComponentState(*.faces.context.FacesContext,*.faces.component.UIViewRoot,String)"
      newMethodName: restoreView
      ignoreDefinition: true
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: "*.faces.application.StateManager restoreTreeStructure(*.faces.context.FacesContext,String,String)"
      newMethodName: restoreView
      ignoreDefinition: true
  - org.openrewrite.java.ChangeMethodName:
      methodPattern: "*.faces.application.StateManager saveSerializedView(*.faces.context.FacesContext)"
      newMethodName: saveView
      ignoreDefinition: true
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: jakarta.faces.application.StateManager
      newFullyQualifiedTypeName: jakarta.faces.view.StateManagementStrategy
      ignoreDefinition: true
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: javax.faces.application.StateManager
      newFullyQualifiedTypeName: jakarta.faces.view.StateManagementStrategy
      ignoreDefinition: true
---
  type: specs.openrewrite.org/v1beta/recipe
  name: org.openrewrite.java.migrate.jakarta.RemovedJakartaFacesExpressionLanguageClasses
  displayName: Use `jakarta.el instead of jakarta.faces.el and javax.faces.el`
  description: >
    Several classes were removed and replaced in Jakarta Faces 4.0.
    The only Object definition not removed in the jakarta.faces.el package is the CompositeComponentExpressionHolder interface.
  recipeList:
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: jakarta.faces.el.MethodBinding
        newFullyQualifiedTypeName: jakarta.el.MethodExpression
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: jakarta.faces.el.PropertyResolver
        newFullyQualifiedTypeName: jakarta.el.ELResolver
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: jakarta.faces.el.ValueBinding
        newFullyQualifiedTypeName: jakarta.el.ValueExpression
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: jakarta.faces.el.VariableResolver
        newFullyQualifiedTypeName: jakarta.el.ELResolver
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: jakarta.faces.el.EvaluationException
        newFullyQualifiedTypeName: jakarta.el.ELException
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: jakarta.faces.el.MethodNotFoundException
        newFullyQualifiedTypeName: jakarta.el.MethodNotFoundException
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: jakarta.faces.el.PropertyNotFoundException
        newFullyQualifiedTypeName: jakarta.el.PropertyNotFoundException
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: jakarta.faces.el.ReferenceSyntaxException
        newFullyQualifiedTypeName: jakarta.el.ELException
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: javax.faces.el.MethodBinding
        newFullyQualifiedTypeName: jakarta.el.MethodExpression
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: javax.faces.el.PropertyResolver
        newFullyQualifiedTypeName: jakarta.el.ELResolver
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: javax.faces.el.ValueBinding
        newFullyQualifiedTypeName: jakarta.el.ValueExpression
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: javax.faces.el.VariableResolver
        newFullyQualifiedTypeName: jakarta.el.ELResolver
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: javax.faces.el.EvaluationException
        newFullyQualifiedTypeName: jakarta.el.ELException
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: javax.faces.el.MethodNotFoundException
        newFullyQualifiedTypeName: jakarta.el.MethodNotFoundException
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: javax.faces.el.PropertyNotFoundException
        newFullyQualifiedTypeName: jakarta.el.PropertyNotFoundException
        ignoreDefinition: true
    - org.openrewrite.java.ChangeType:
        oldFullyQualifiedTypeName: javax.faces.el.ReferenceSyntaxException
        newFullyQualifiedTypeName: jakarta.el.ELException
        ignoreDefinition: true

