#
# Copyright 2022 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.Java8toJava11
displayName: Migrate to Java 11
description: >
  This recipe will apply changes commonly needed when upgrading to Java 11. Specifically, for those applications that
  are built on Java 8, this recipe will update and add dependencies on J2EE libraries that are no longer directly
  bundled with the JDK. This recipe will also replace deprecated API with equivalents when there is a clear migration
  strategy. Build files will also be updated to use Java 11 as the target/source and plugins will be also be upgraded
  to versions that are compatible with Java 11.
tags:
  - java11
  - jaxb
  - jaxws
  - deprecated
  - jakarta
recipeList:
  - org.openrewrite.java.migrate.UpgradeToJava8
  - org.openrewrite.java.migrate.UseJavaUtilBase64
  - org.openrewrite.java.migrate.CastArraysAsListToList
  # Add an explicit JAXB/JAX-WS runtime and upgrade the dependencies to Jakarta EE 8
  - org.openrewrite.java.migrate.javax.AddJaxbDependencies
  - org.openrewrite.java.migrate.javax.AddJaxwsDependencies
  - org.openrewrite.java.migrate.javax.AddInjectDependencies
  # Remediate deprecations
  - org.openrewrite.staticanalysis.BigDecimalRoundingConstantsToEnums
  - org.openrewrite.staticanalysis.PrimitiveWrapperClassConstructorToValueOf
  - org.openrewrite.java.migrate.concurrent.JavaConcurrentAPIs
  - org.openrewrite.java.migrate.lang.JavaLangAPIs
  - org.openrewrite.java.migrate.RemoveMethodInvocation:
      methodPattern: java.lang.Runtime runFinalizersOnExit(boolean)
  - org.openrewrite.java.migrate.RemoveMethodInvocation:
      methodPattern: java.lang.System runFinalizersOnExit(boolean)
  - org.openrewrite.java.migrate.logging.JavaLoggingAPIs
  - org.openrewrite.java.migrate.lombok.UpdateLombokToJava11
  - org.openrewrite.java.migrate.net.JavaNetAPIs
  - org.openrewrite.java.migrate.sql.JavaSqlAPIs
  - org.openrewrite.java.migrate.javax.JavaxLangModelUtil
  - org.openrewrite.java.migrate.javax.JavaxManagementMonitorAPIs
  - org.openrewrite.java.migrate.javax.JavaxXmlStreamAPIs
  - org.openrewrite.java.migrate.cobertura.RemoveCoberturaMavenPlugin
  - org.openrewrite.java.migrate.wro4j.UpgradeWro4jMavenPluginVersion
  - org.openrewrite.java.migrate.jacoco.UpgradeJaCoCoMavenPluginVersion
  - org.openrewrite.java.migrate.JavaVersion11
# Disabled due to null safety issues in the current implementation
# https://github.com/openrewrite/rewrite-migrate-java/issues/250
#  - org.openrewrite.java.migrate.util.JavaUtilAPIs
  - org.openrewrite.java.migrate.util.OptionalNotPresentToIsEmpty
  - org.openrewrite.java.migrate.util.OptionalNotEmptyToIsPresent
  - org.openrewrite.java.migrate.util.OptionalStreamRecipe
  - org.openrewrite.github.SetupJavaUpgradeJavaVersion:
      minimumJavaMajorVersion: 11
  - org.openrewrite.java.migrate.InternalBindContextFactory

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.JavaVersion11
displayName: Change Maven Java version property values to 11
description: Change maven.compiler.source and maven.compiler.target values to 11.
recipeList:
  - org.openrewrite.java.migrate.UpgradeJavaVersion:
      version: 11
  - org.openrewrite.maven.UpgradePluginVersion:
      groupId: org.apache.maven.plugins
      artifactId: maven-compiler-plugin
      newVersion: 3.6.2
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.javax.AddJaxbDependencies
displayName: Add explicit JAXB dependencies
description: >
  This recipe will add explicit dependencies for Jakarta EE 8 when a Java 8 application is using JAXB. Any existing
  dependencies will be upgraded to the latest version of Jakarta EE 8. The artifacts are moved to Jakarta EE 8 version 2.x
  which allows for the continued use of the `javax.xml.bind` namespace. Running a full javax to Jakarta migration
  using `org.openrewrite.java.migrate.jakarta.JavaxMigrationToJakarta` will update to versions greater than 3.x which
  necessitates the package change as well.
tags:
  - javax
  - java11
  - jaxb
  - jakarta
  - glassfish
recipeList:
  # Remove the legacy jaxb-core artifact
  - org.openrewrite.java.dependencies.RemoveDependency:
      groupId: com.sun.xml.bind
      artifactId: jaxb-core
  - org.openrewrite.maven.RemoveManagedDependency:
      groupId: com.sun.xml.bind
      artifactId: jaxb-core
  # Change any existing places in the project poms that use the jaxb-api.
  - org.openrewrite.java.dependencies.ChangeDependency:
      oldGroupId: javax.xml.bind
      oldArtifactId: jaxb-api
      newGroupId: jakarta.xml.bind
      newArtifactId: jakarta.xml.bind-api
      newVersion: 2.3.x
  - org.openrewrite.maven.ChangeManagedDependencyGroupIdAndArtifactId:
      oldGroupId: javax.xml.bind
      oldArtifactId: jaxb-api
      newGroupId: jakarta.xml.bind
      newArtifactId: jakarta.xml.bind-api
      newVersion: 2.3.x
  # Add the jakarta JAXB artifact if it is missing but a project uses types in java.xml.bind
  - org.openrewrite.java.dependencies.AddDependency:
      groupId: jakarta.xml.bind
      artifactId: jakarta.xml.bind-api
      version: 2.3.x
      onlyIfUsing: javax.xml.bind..*
      acceptTransitive: true
  # If a project already had the jakarta api, make sure it is at the latest version.
  - org.openrewrite.java.dependencies.UpgradeDependencyVersion:
      groupId: jakarta.xml.bind
      artifactId: jakarta.xml.bind-api
      newVersion: 2.3.x
  # Add the jaxb runtime to any projects that have a transitive dependency on the api
  - org.openrewrite.java.migrate.javax.AddJaxbRuntime:
      runtime: glassfish
  # Remove the version from added dependencies when a managed version exists.
  - org.openrewrite.maven.RemoveRedundantDependencyVersions:
      groupPattern: org.glassfish.jaxb
      artifactPattern: "*"
      onlyIfVersionsMatch: true
  - org.openrewrite.maven.RemoveRedundantDependencyVersions:
      groupPattern: com.sun.xml.bind
      artifactPattern: "*"
      onlyIfVersionsMatch: true
  - org.openrewrite.maven.RemoveRedundantDependencyVersions:
      groupPattern: jakarta.xml.bind
      artifactPattern: "*"
      onlyIfVersionsMatch: true
  - org.openrewrite.maven.UpgradePluginVersion:
      groupId: org.codehaus.mojo
      artifactId: jaxb2-maven-plugin
      newVersion: 2.5.x
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.javax.AddJaxwsDependencies
displayName: Add explicit JAX-WS dependencies
description: >
  This recipe will add explicit dependencies for Jakarta EE 8 when a Java 8 application is using JAX-WS. Any existing
  dependencies will be upgraded to the latest version of Jakarta EE 8. The artifacts are moved to Jakarta EE 8 but the
  application can continue to use the `javax.xml.bind` namespace.
tags:
  - javax
  - java11
  - jaxb
  - jakarta
  - glassfish
recipeList:
  # Remove the legacy jaxws-ri artifact
  - org.openrewrite.java.dependencies.RemoveDependency:
      groupId: com.sun.xml.ws
      artifactId: jaxws-ri
  - org.openrewrite.maven.RemoveManagedDependency:
      groupId: com.sun.xml.ws
      artifactId: jaxws-ri
  # Change any existing places in the project poms that use the jaxb-api.
  - org.openrewrite.java.dependencies.ChangeDependency:
      oldGroupId: javax.xml.ws
      oldArtifactId: jaxws-api
      newGroupId: jakarta.xml.ws
      newArtifactId: jakarta.xml.ws-api
      newVersion: 2.3.x
  - org.openrewrite.maven.ChangeManagedDependencyGroupIdAndArtifactId:
      oldGroupId: javax.xml.ws
      oldArtifactId: jaxws-api
      newGroupId: jakarta.xml.ws
      newArtifactId: jakarta.xml.ws-api
      newVersion: 2.3.x
  # Add the jakarta JAXB artifact if it is missing but a project uses types in either javax.jws or javax.xml.ws
  - org.openrewrite.java.dependencies.AddDependency:
      groupId: jakarta.xml.ws
      artifactId: jakarta.xml.ws-api
      version: 2.3.x
      onlyIfUsing: javax.jws..*
      acceptTransitive: true
  - org.openrewrite.java.dependencies.AddDependency:
      groupId: jakarta.xml.ws
      artifactId: jakarta.xml.ws-api
      version: 2.3.x
      onlyIfUsing: javax.xml.ws..*
      acceptTransitive: true
  # If a project already had the jakarta api, make sure it is at the latest version.
  - org.openrewrite.java.dependencies.UpgradeDependencyVersion:
      groupId: jakarta.xml.ws
      artifactId: jakarta.xml.ws-api
      newVersion: 2.3.x
  # Add the jaxb runtime to any projects that have a transitive dependency on the api
  - org.openrewrite.java.migrate.javax.AddJaxwsRuntime
  # Remove the version from added dependencies when a managed version exists.
  - org.openrewrite.maven.RemoveRedundantDependencyVersions:
      groupPattern: jakarta.xml.ws
      artifactPattern: "*"
      onlyIfVersionsMatch: true
  - org.openrewrite.maven.RemoveRedundantDependencyVersions:
      groupPattern: com.sun.xml.ws
      artifactPattern: "*"
      onlyIfVersionsMatch: true
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.InternalBindContextFactory
displayName: Use `com.sun.xml.bind.v2.ContextFactory` instead of `com.sun.xml.internal.bind.v2.ContextFactory`
description: Do not use the `com.sun.xml.internal.bind.v2.ContextFactory` class.
tags:
  - java11
recipeList:
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: com.sun.xml.internal.bind.v2.ContextFactory
      newFullyQualifiedTypeName: com.sun.xml.bind.v2.ContextFactory
      ignoreDefinition: true
