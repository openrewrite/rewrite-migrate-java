#
# Copyright 2023 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.UpgradeToJava6
displayName: Migrate to Java 6
description: >
  This recipe will apply changes commonly needed when upgrading to Java 6. This recipe will also replace deprecated API
  with equivalents when there is a clear migration strategy.
tags:
  - java6
recipeList:
  - org.openrewrite.java.migrate.JREWrapperInterface
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.migrate.JREWrapperInterface
displayName: Add missing `isWrapperFor` and `unwrap` methods.
description: Add method implementations stubs to classes that implement `java.sql.Wrapper`.
recipeList:
  - org.openrewrite.java.migrate.jacoco.UpgradeJaCoCo
  - org.openrewrite.java.migrate.AddMissingMethodImplementation:
      fullyQualifiedClassName: java.sql.Wrapper
      methodPattern: "*..* isWrapperFor(..)"
      methodTemplateString: "public boolean isWrapperFor(Class<?> iface) throws java.sql.SQLException { \n\t// TODO Auto-generated method stub\n return iface != null && iface.isAssignableFrom(this.getClass()); }"
  - org.openrewrite.java.migrate.AddMissingMethodImplementation:
      fullyQualifiedClassName: java.sql.Wrapper
      methodPattern: "*..* unwrap(..)"
      methodTemplateString: "public <T> T unwrap(Class<T> iface) throws java.sql.SQLException { \n\t// TODO Auto-generated method stub\n try { if (iface != null && iface.isAssignableFrom(this.getClass())) { return (T) this; } throw new java.sql.SQLException(\"Auto-generated unwrap failed; Revisit implementation\"); } catch (Exception e) { throw new java.sql.SQLException(e); } }"